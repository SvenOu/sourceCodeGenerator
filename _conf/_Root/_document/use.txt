// 变量表达式, stringFormator: camelToUnderline, underlineToCame,
// underlineToCameUPCASEFirst, upCaseFirst, lowerCaseFirst, upCaseALL, lowerCaseALL
${{elementName-stringFormator}}

// 数组表达式, arrayFormator: prefix, suffix, suffixNotIncludeEnd
$tp-repeat(arrayName-arrayFormator~formatorStr){{
 $(elementName-stringFormator)
}}

//dir, file..表达式,用于文件夹生成
$dir{{elementName-stringFormator}}
$file{{elementName-stringFormator}}
$file-repeat(arrayName){{$(elementName-stringFormator)}}

// #root 引用数据的根变量
example: ${{#root.dirName1-upCaseFirst}}

// 高级多重循环 see Android_theme模板
$muti-repeatN(arrayName-arrayFormator~formatorStr){{
    $(elementName-stringFormator)

    $muti-repeatN2(arrayName-arrayFormator~formatorStr){{
        $(elementName-stringFormator)
    $endN2}

$endN}

// 各种if表达式,格式: xxxif(javacript脚本){ xxxxxx $endxxxif}
$if 最外层使用
    $if(showA > 0 && showA <10){---- showA: ${{showA}}  ----$endif}

$rpif 用于 $tp-repeat 循环体内
    $rpif(name !== 'testArray name'){--哈哈哈哈---$endrpif}

$mutirpif 用于 $muti-repeatN 循环体内
    $mutirpif(shape){--哈哈哈哈 $(shape)---$endmutirpif}

// 注意: 所有表达式都支持"."号操作
// example:
public class ${{a.b.voClassName}} implements Serializable {
  $tp-repeat(a.b.fields){{private $(type) $(name-underlineToCame);
  }}
  @Override
  public String toString() {
    return String.format(
    "${{voClassName}}{$tp-repeat(a.b.fields-suffixNotIncludeEnd~,){{$(name-underlineToCame)='%s'}} }",
        $tp-repeat(a.b.fields-suffixNotIncludeEnd~,){{$(name-underlineToCame)}});
  }
}