buildscript {
    // 统一管理子项目依赖的版本
    // 如果不指定项目每次都会自动获取最新版本，不稳定
    ext {
        // springBoot
        springBootVersion = '2.1.1.RELEASE'
        springBootMobileVersion = '1.5.18.RELEASE'
        springRestdocsVersion = '2.0.2.RELEASE'
        springSessionVersion = '1.3.4.RELEASE'
        springDataVersion = '2.1.3.RELEASE'
        springSecurityTestVersion = '5.1.2.RELEASE'

        // mysql 和 tomcat 版本必须与部署的机器对应
        mysqlConnectorVersion = '8.0.13'
        tomcatEmbedVersion = '8.5.35'

        // sql_code_generator
        orgXerialVersion = '3.16.1'
        javapoetVersion = '1.8.0'
        netSourceforgeJtdsVersion = '1.3.1'
        zip4jVersion = '1.3.2'

        // common lib

    }

    // 以下是当前 gradle 脚本环境配置
    repositories {
        maven { url 'https://maven.aliyun.com/repository/spring-plugin'}
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 批量克隆配置到子项目
// 好处: 子项目无需关心环境配置,更加简洁
subprojects {

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'io.spring.dependency-management'
    // 支持中文
    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'
    sourceCompatibility = 1.8

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/'}
        maven { url 'https://maven.aliyun.com/repository/spring/'}
        mavenLocal()
        mavenCentral()
    }

    // 子 gradle 脚本环境配置
    buildscript {
        repositories {
            maven { url 'https://maven.aliyun.com/repository/spring-plugin'}
            mavenLocal()
            mavenCentral()
        }
    }
}





